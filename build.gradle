plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.3.0'
}

group = 'com.jcastillo.storefindr'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// OpenAPI and Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
	implementation 'io.swagger.core.v3:swagger-models:2.2.20'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	// Jackson for JSON handling
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	// Jakarta EE APIs
	implementation 'jakarta.validation:jakarta.validation-api'
	implementation 'jakarta.annotation:jakarta.annotation-api'

	// Cucumber dependencies
	testImplementation 'io.cucumber:cucumber-java:7.22.0'
	testImplementation 'io.cucumber:cucumber-spring:7.22.0'
	testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.22.0'
	testImplementation 'org.junit.platform:junit-platform-suite'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/storeFindr.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.jcastillo.storefindr.api"
	modelPackage = "com.jcastillo.storefindr.model"
	configOptions = [
			dateLibrary: "java8",
			documentationProvider: "springdoc",
			openApiNullable: "false",
			hideGenerationTimestamp: "true",
			interfaceOnly: "true",
			useSpringBoot3: "true"
	]
	validateSpec = true
	verbose = true
	logToStderr = true
}

sourceSets {
	main {
		java {
			srcDir "${buildDir}/generated/src/main/java"
		}
	}
}

tasks.named('openApiGenerate').configure {
	doFirst {
		delete fileTree("$buildDir/generated") {
			include '**/*'
		}
	}

	doLast {
		mkdir "$buildDir/generated"
	}
}

// Make sure compilation depends on OpenAPI generation
tasks.named('compileJava').configure {
	dependsOn 'openApiGenerate'
}
